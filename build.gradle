/*
 *  Copyright 2021 EPAM Systems
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'java'

apply from: "${project.scripts_url}/${project.scripts_branch}/build-quality.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/release-fat.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/signing.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

sourceSets {
    main {
        compileClasspath += configurations.shadow
        runtimeClasspath += configurations.shadow
    }
    test {
        compileClasspath += configurations.shadow
        runtimeClasspath += configurations.shadow
    }
}

shadowJar {

    dependencies {
        include(dependency('com.epam.reportportal:restendpoint'))
        include(dependency('org.apache.httpcomponents:httpclient'))
        include(dependency('org.apache.httpcomponents:httpmime'))
        include(dependency('org.apache.httpcomponents:httpcore'))
        include(dependency('commons-logging:commons-logging'))
        include(dependency('com.google.guava:guava'))
    }

    classifier = null
    relocate 'org.apache.http', 'rp.org.apache.http'
    relocate 'com.google.common', 'rp.com.google.common'
    relocate 'com.google.thirdparty', 'rp.com.google.thirdparty'
    relocate 'org.apache.commons.logging', 'rp.org.apache.commons.logging'
}

dependencies {
    compile 'com.epam.reportportal:commons-model:5.0.0'

    compile 'com.google.guava:guava:26.0-jre'
    compile 'com.epam.reportportal:restendpoint:0.2.14'

    shadow "org.aspectj:aspectjweaver:1.9.2"
    shadow "org.aspectj:aspectjrt:1.9.2"

    shadow 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    shadow 'com.fasterxml.jackson.core:jackson-annotations:2.9.9'
    shadow 'io.reactivex.rxjava2:rxjava:2.2.10'
    shadow 'org.apache.tika:tika-core:1.20'
    shadow 'org.slf4j:slf4j-api:1.7.25'

    testImplementation("org.junit.platform:junit-platform-runner:${project.junit_runner_version}") {
        exclude module: 'junit'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${project.junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${project.junit_version}"

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation "org.mockito:mockito-core:${project.mockito_version}"
    testImplementation "org.mockito:mockito-junit-jupiter:${project.mockito_version}"
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation('org.awaitility:awaitility:4.0.2') {
        exclude group: 'org.hamcrest'
    }
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'com.github.reportportal:agent-java-test-utils:3d4d206'
}

test {
    useJUnitPlatform()
    systemProperty("file.encoding", "utf-8")
    forkEvery(1)
    maxParallelForks(5)
    outputs.upToDateWhen { false }
}

wrapper {
    gradleVersion = '5.4.1'
}

processResources {
    filesMatching('client.properties') {
        expand(project.properties)
    }
}

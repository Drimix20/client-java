/*
 *  Copyright 2021 EPAM Systems
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java-library'

project.ext.releaseMode = project.hasProperty('releaseMode')
def branch = releaseMode ? '5.0.0' : 'develop'
apply from: "https://raw.githubusercontent.com/reportportal/gradle-scripts/$branch/release-commons.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileTestJava.options.encoding = "UTF-8"

repositories {
    jcenter()
    mavenLocal()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url "https://jitpack.io" }
}

project.ext.githubUserName = project.hasProperty('githubUserName') ? githubUserName : ""
project.ext.githubToken = project.hasProperty('githubToken') ? githubToken : ""

publishing {
    repositories {
        maven {
            name = "JUnit5 GitHub Packages"
            url = uri("https://maven.pkg.github.com/reportportal/client-java")
            credentials {
                username = githubUserName
                password = githubToken
            }
        }
    }
}

processResources {
    filesMatching('client.properties') {
        expand(project.properties)
    }
}

dependencies {
    api 'com.epam.reportportal:commons-model:5.0.0'
    api 'io.reactivex.rxjava2:rxjava:2.2.10'
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'com.google.guava:guava:30.1-android'
    api "com.squareup.retrofit2:retrofit:${project.retrofit_version}"
    implementation "com.squareup.retrofit2:converter-scalars:${project.retrofit_version}"
    implementation "com.squareup.retrofit2:converter-jackson:${project.retrofit_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${project.retrofit_version}"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9'

    api "org.aspectj:aspectjrt:${project.aspectj_version}"
    implementation "org.aspectj:aspectjweaver:${project.aspectj_version}"

    api 'org.apache.tika:tika-core:1.20'
    implementation 'org.slf4j:slf4j-api:1.7.25'

    testImplementation('org.junit.platform:junit-platform-runner:1.6.0') {
        exclude module: 'junit'
    }
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation('org.awaitility:awaitility:4.0.2') {
        exclude group: 'org.hamcrest'
    }
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'com.github.reportportal:agent-java-test-utils:3d4d206'
}

test {
    useJUnitPlatform()
    systemProperty("file.encoding", "utf-8")
    forkEvery(1)
    maxParallelForks(5)
    outputs.upToDateWhen { false }
}

wrapper {
    gradleVersion = '5.4.1'
}

def releaseDependencies = [bintrayUpload, publish]
releaseDependencies.addAll(afterReleaseBuild.getDependsOn())
afterReleaseBuild.setDependsOn(releaseDependencies)
